name: Point of Sale CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    # Setup the builder with a build cache
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python 3.x
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Installation of dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    # Run tests
    - name: Run Tests
      run: |
        python src/manage.py test src

    # Use the PAT and username to log into Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # Builder
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/point-of-sale:latest

        # Setting up the builder to use the output of the buildx step
        builder: ${{ steps.buildx.outputs.name }}
        # Using the cache to store to and to retrieve
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
